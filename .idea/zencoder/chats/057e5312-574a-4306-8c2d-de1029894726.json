{
    "checksum": "2c4741f924256ba4637021fabc6f770e6ce361da546793837c745091844c13dd",
    "data": {
    "id": "057e5312-574a-4306-8c2d-de1029894726",
    "createdAt": 1755187984561,
    "updatedAt": 1755187987759,
    "title": " Generate tests for Series method",
    "messages": [
        {
            "id": "9648cdf2-0eef-451d-84cd-c79d9aff2f4d",
            "role": "user",
            "content": [
                {
                    "type": "text",
                    "text": " Generate tests for Series method"
                }
            ],
            "context": {
                "currentFile": {
                    "path": "C:\\Users\\MA$\\IdeaProjects\\imdb_clone\\src\\main\\java\\com\\papel\\imdb_clone\\model\\Series.java",
                    "fsPath": "C:/Users/MA$/IdeaProjects/imdb_clone/src/main/java/com/papel/imdb_clone/model/Series.java",
                    "content": "package com.papel.imdb_clone.model;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Objects;\n\npublic class Series extends Content {\n    private final List<Season> seasons;\n\n    // Rich content fields\n    private String boxOffice;\n    private List<String> awards;\n\n    /**\n     * Creates a new Series with the given title.\n     */\n    public Series() {\n        this(title, \"\");\n    }\n\n    /**\n     * Creates a new Series with the given title and summary.\n     *\n     * @param title   The title of the series\n     * @param summary A brief summary/description of the series\n     */\n    public Series(String title, String summary) {\n        super(title, new java.util.Date(), com.papel.imdb_clone.enums.Genre.DRAMA, \"\", new java.util.HashMap<>(), 0.0);\n        this.seasons = new ArrayList<>();\n        this.awards = new ArrayList<>();\n        setSummary(summary);\n    }\n\n    public Series(String title, String summary, com.papel.imdb_clone.enums.Genre genre, double imdbRating, double userRating) {\n        super(title, new java.util.Date(), genre, \"\", new java.util.HashMap<>(), imdbRating);\n        this.seasons = new ArrayList<>();\n        this.awards = new ArrayList<>();\n        setSummary(summary);\n        // The userRating would be set through a different mechanism, so we don't set it here.\n    }\n\n    public List<Season> getSeasons() {\n        return new ArrayList<>(seasons);\n    }\n\n    public void addSeason(Season season) {\n        if (season != null) {\n            seasons.add(season);\n        }\n    }\n\n    public void removeSeason(Season season) {\n        if (season != null) {\n            seasons.remove(season);\n        }\n    }\n\n    public String getBoxOffice() {\n        return boxOffice;\n    }\n\n    public void setBoxOffice(String boxOffice) {\n        this.boxOffice = boxOffice;\n    }\n\n    public List<String> getAwards() {\n        return new ArrayList<>(awards);\n    }\n\n    public void setAwards(List<String> awards) {\n        this.awards = awards != null ? new ArrayList<>(awards) : new ArrayList<>();\n    }\n\n    public void addAward(String award) {\n        if (award != null && !award.trim().isEmpty()) {\n            this.awards.add(award);\n        }\n    }\n\n    /**\n     * Gets all actors from all seasons and episodes.\n     *\n     * @return List of all actors in the series\n     */\n    public List<Actor> getActors() {\n        List<Actor> allActors = new ArrayList<>();\n        for (Season season : seasons) {\n            for (Episode episode : season.getEpisodes()) {\n                allActors.addAll(episode.getActors());\n            }\n        }\n        return allActors;\n    }\n\n    /**\n     * Gets the description/summary of the series.\n     *\n     * @return The series description\n     */\n    public String getDescription() {\n        return getSummary();\n    }\n\n    /**\n     * Compares this {@code Series} object with the specified object for equality.\n     * Returns {@code true} if the given object is also a {@code Series} and\n     * all inherited fields, as well as the {@code seasons} field, are equal.\n     * This method relies on the superclass's {@code equals} implementation\n     * and uses {@link java.util.Objects#equals(Object, Object)} for null-safe comparison\n     * of the {@code seasons} field, assuming proper {@code equals} implementation for\n     * elements within the {@code seasons} collection.\n     *\n     * @param obj The object to be compared for equality.\n     * @return {@code true} if the specified object is equal to this {@code Series}; {@code false} otherwise.\n     */\n\n    @Override\n    public boolean equals(Object obj) {\n        if (this == obj) return true;\n        if (obj == null || getClass() != obj.getClass()) return false;\n        if (!super.equals(obj)) return false;\n        Series series = (Series) obj;\n        return Objects.equals(seasons, series.seasons) &&\n                Objects.equals(boxOffice, series.boxOffice) &&\n                Objects.equals(awards, series.awards);\n    }\n\n    /**\n     * Generates a hash code for this {@code Series} object.\n     * The hash code is computed based on the superclass's hash code and the\n     * hash of the {@code seasons} field.\n     * This method is consistent with {@link #equals(Object)}, ensuring that\n     * equal {@code Series} objects produce the same hash code.\n     * Proper {@code hashCode} implementations are expected for both the superclass\n     * and the elements within the {@code seasons} collection.\n     *\n     * @return A hash code value for this object.\n     */\n    @Override\n    public int hashCode() {\n        return Objects.hash(super.hashCode(), seasons, boxOffice, awards);\n    }\n\n    @Override\n    public String toString() {\n        return \"Series{\" +\n                \"id=\" + getId() +\n                \", title='\" + getTitle() + '\\'' +\n                \", genre=\" + getGenre() +\n                \", summary='\" + (getSummary() != null ? getSummary().substring(0, Math.min(20, getSummary().length())) + \"...\" : \"\") + '\\'' +\n                \", seasons=\" + seasons.size() +\n                '}';\n    }\n\n    public void setStartYear(int startYear) {\n    }\n\n    public void setEndYear(int endYear) {\n    }\n\n    public void setCreator(String creator) {\n    }\n\n    public void setDescription(String description) {\n    }\n\n    public void setReleaseYear(int i) {\n    }\n\n    public void addGenre(String genreName) {\n\n    }\n}",
                    "language": "java"
                },
                "codebaseEnabled": true
            },
            "createdAt": 1755187984570,
            "isInternal": false,
            "rawContent": {
                "type": "doc",
                "content": [
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": " Generate tests for Series method"
                            }
                        ]
                    }
                ]
            },
            "autoAppliedRules": []
        }
    ],
    "isUnitTestsAgent": true
}
}