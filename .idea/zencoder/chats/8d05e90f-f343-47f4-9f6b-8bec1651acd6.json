{
    "checksum": "a351832fd669d4413fe8c6d7449f2d82f8a79841acfd468a518c09d012178184",
    "data": {
    "id": "8d05e90f-f343-47f4-9f6b-8bec1651acd6",
    "createdAt": 1754053330159,
    "updatedAt": 1754053350832,
    "title": "Request for Code Improvements",
    "messages": [
        {
            "id": "077dae79-d962-4a83-84a8-751f2b81f493",
            "role": "user",
            "content": [
                {
                    "type": "text",
                    "text": "Recommend improvements"
                }
            ],
            "context": {
                "currentFile": {
                    "path": "src\\main\\java\\com\\papel\\imdb_clone\\model\\User.java",
                    "fsPath": "C:\\Users\\mas_b\\IdeaProjects\\imdb_clone\\src\\main\\java\\com\\papel\\imdb_clone\\model\\User.java",
                    "sources": [
                        "opened_tab"
                    ],
                    "content": "package com.papel.imdb_clone.model;\r\n\r\nimport com.papel.imdb_clone.exceptions.InvalidEmailException;\r\n\r\nimport java.util.Objects;\r\nimport java.util.regex.Pattern;\r\n\r\npublic class User {\r\n    private int id;\r\n    private String password;\r\n    private final String firstName;\r\n    private final String lastName;\r\n    private String username;\r\n    private String email;\r\n    private final char gender;\r\n\r\n    private static final Pattern EMAIL_PATTERN = Pattern.compile(\r\n            \"^[A-Za-z0-9+_.-]+@[A-Za-z0-9.-]+\\\\.[A-Za-z]{2,}$\");\r\n\r\n    public User(String firstName, String lastName, String username, char gender, String email) {\r\n        this.firstName = firstName;\r\n        this.lastName = lastName;\r\n        this.username = username;\r\n        this.gender = gender;\r\n        setEmail(email);\r\n    }\r\n\r\n    public int getId() {\r\n        return id;\r\n    }\r\n\r\n    public void setId(int id) {\r\n        this.id = id;\r\n    }\r\n\r\n    public String getFirstName() {\r\n        return firstName;\r\n    }\r\n\r\n    public void setFirstName(String firstName) {\r\n        this.firstName = firstName;\r\n    }\r\n\r\n    public String getLastName() {\r\n        return lastName;\r\n    }\r\n\r\n    public void setLastName(String lastName) {\r\n        this.lastName = lastName;\r\n    }\r\n\r\n    public String getUsername() {\r\n        return username;\r\n    }\r\n\r\n    public String getEmail() {\r\n        return email;\r\n    }\r\n\r\n    public char getGender() {\r\n        return gender;\r\n    }\r\n\r\n    public void setUsername(String username) {\r\n        this.username = username;\r\n    }\r\n\r\n    public void setPassword(String password) {\r\n        this.password = password;\r\n    }\r\n\r\n    public void setEmail(String email) {\r\n        if (email == null || !EMAIL_PATTERN.matcher(email).matches()) {\r\n            throw new InvalidEmailException(\"Invalid email format: \" + email);\r\n        }\r\n        this.email = email;\r\n    }\r\n\r\n    /**\r\n     * Overrides the default `equals` method to provide a meaningful comparison between `User` objects.\r\n     * Two `User` objects are considered equal if all their significant fields match.\r\n     *\r\n     * @param obj The object to compare with this `User` object.\r\n     * @return `true` if the given object is a `User` and all its significant fields\r\n     * (id, gender, username, firstName, lastName, email) are equal to this `User`'s fields;\r\n     * `false` otherwise.\r\n     */\r\n\r\n    @Override\r\n    public boolean equals(Object obj) {\r\n        if (this == obj) return true;\r\n        if (obj == null || getClass() != obj.getClass()) return false;\r\n        User user = (User) obj;\r\n        return id == user.id &&\r\n                gender == user.gender &&\r\n                Objects.equals(username, user.username) &&\r\n                Objects.equals(firstName, user.firstName) &&\r\n                Objects.equals(lastName, user.lastName) &&\r\n                Objects.equals(email, user.email);\r\n    }\r\n\r\n    /**\r\n     * Overrides the default `hashCode` method, providing a hash code consistent with the `equals` method.\r\n     * This ensures that if two `User` objects are equal according to `equals()`, they will have the same hash code.\r\n     * It's crucial for correct functionality in hash-based collections like `HashMap` and `HashSet`.\r\n     *\r\n     * @return A hash code value for this `User` object, calculated from all significant fields\r\n     * (id, firstName, lastName, username, email, gender).\r\n     */\r\n    @Override\r\n    public int hashCode() {\r\n        return Objects.hash(id, firstName, lastName, username, email, gender);\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"User{\" +\r\n                \"id=\" + id +\r\n                \", firstName='\" + firstName + '\\'' +\r\n                \", lastName='\" + lastName + '\\'' +\r\n                \", username='\" + username + '\\'' +\r\n                \", email='\" + email + '\\'' +\r\n                \", gender=\" + gender +\r\n                '}';\r\n    }\r\n\r\n    public String getPassword() {\r\n        return password;\r\n    }\r\n}"
                },
                "codebaseEnabled": true
            },
            "createdAt": 1754053330175,
            "isInternal": false,
            "rawContent": {
                "type": "doc",
                "content": [
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "Recommend improvements"
                            }
                        ]
                    }
                ]
            },
            "autoAppliedRules": []
        },
        {
            "id": "25d3ef6a-328c-44ff-ae21-aee2b88e89d1",
            "role": "assistant",
            "content": [
                {
                    "type": "text",
                    "text": "I'd be happy to help you review your code! To provide the most effective and targeted feedback, I need to understand what you'd like me to review."
                },
                {
                    "type": "toolCall",
                    "toolCallId": "toolu_01Q7SJMgSHhTxMByMzxSw9rx",
                    "statusText": "Requirements collected",
                    "status": "SUCCESS",
                    "isHidden": false,
                    "localResult": "{\"answers\":{}}"
                },
                {
                    "type": "requirementsTool",
                    "id": "ec9c7ce6-e5f9-4f3c-99d9-b6a991a619ab",
                    "questions": [
                        {
                            "question": "What would you like me to review?",
                            "options": [
                                "Uncommitted changes in the directory",
                                "Diff with main branch (only changes unique to current branch)",
                                "A certain commit (I'll show you recent commits to choose from)",
                                "Certain file(s) (you can specify which ones)",
                                "The currently open User.java file",
                                "A specific piece of code (you can share it in your next message)"
                            ]
                        },
                        {
                            "question": "Are there specific areas or concerns you'd like me to focus on during the review?",
                            "options": [
                                "General code quality and best practices",
                                "Performance optimization",
                                "Security vulnerabilities",
                                "Readability and maintainability",
                                "Bug detection and edge cases",
                                "Testing coverage and quality",
                                "Documentation and comments"
                            ]
                        }
                    ],
                    "toolCallId": "toolu_01Q7SJMgSHhTxMByMzxSw9rx",
                    "answers": {},
                    "status": "SUCCESS"
                }
            ],
            "context": {
                "author": "Review",
                "operationId": "adcc7f9c-2c94-4f6c-88d9-da2f6970fb82"
            },
            "createdAt": 1754053332557,
            "isInternal": false
        },
        {
            "id": "35388597-05dc-4589-b861-7bdac97edb4f",
            "role": "assistant",
            "content": [
                {
                    "type": "text",
                    "text": "Please let me know:\n\n1. **What would you like me to review?**\n   - Uncommitted changes in the directory\n   - Diff with main branch (only changes unique to current branch)\n   - A certain commit (I'll show you recent commits to choose from)\n   - Certain file(s) (you can specify which ones)\n   - The currently open User.java file\n   - A specific piece of code (you can share it in your next message)\n\n2. **Are there specific areas or concerns you'd like me to focus on during the review?**\n   - General code quality and best practices\n   - Performance optimization\n   - Security vulnerabilities\n   - Readability and maintainability\n   - Bug detection and edge cases\n   - Testing coverage and quality\n   - Documentation and comments\n\nOnce you provide this information, I'll conduct a thorough review and give you constructive feedback with specific recommendations for improvement."
                }
            ],
            "context": {
                "author": "Review",
                "operationId": "f61d56e3-d74f-49ad-9c22-f5b8075c38a3",
                "usageStatistics": {
                    "llmCallsUsedForAnswer": 2.0,
                    "llmCallsUsedTotal": 169.0,
                    "llmCallsLimit": 200.0,
                    "limitRenewalMillisecondTimestamp": 1754137033070
                }
            },
            "createdAt": 1754053350832,
            "isInternal": false
        }
    ],
    "isAgent": false,
    "isNameGenerated": true,
    "isCustomAgent": true,
    "customAgent": {
        "id": "f83edcb4-57ff-4600-81bd-361662ea8c8e",
        "name": "Review",
        "commandName": "review",
        "command": "You are a Code Review agent. Your primary task is to assist users by reviewing their code and providing constructive feedback. Follow these steps to ensure an effective and thorough review:\n\n1. **Understand the User's Request**:\n    - Always begin by clarifying the requirements for the review with the user. For example:\n        - \"What would you like me to review?\"\n            - uncommitted changes in the directory\n            - diff with main branch (IMPORTANT: in this case review only changes unique to the current branch, do not include changes that are already in main, use git diff with range like <base-branch>...HEAD to achive it)\n            - certain commit (ask user to select a commit from the 5 recent commits in the branch)\n            - certain file(s) (ask user to send them in the next message, ignore currenly open file)\n            - specific piece of code. Ask user to send it in the next message, if it's not sent in the prev message directly\n        - \"Are there specific areas or concerns you'd like me to focus on (e.g., performance, readability, bugs)?\"\n    - If the user provides incomplete or unclear information, ask clarifying questions to gather the necessary context.\n2. **Perform the Code Review**:\n    - Once you have the code and context, analyze it thoroughly. Focus on the following key aspects during the review:\n\n        **a. Functionality**:\n\n        - Does the code work as intended? Are there any bugs or logical errors?\n        - Are edge cases and error handling properly addressed?\n\n        **b. Readability and Maintainability**:\n\n        - Is the code easy to read and understand?\n        - Are variable names, function names, and comments clear and descriptive?\n        - Is the code modular and well-organized?\n\n        **c. Performance**:\n\n        - Is the code efficient? Are there any unnecessary computations or bottlenecks?\n        - Are there opportunities to optimize the code for better performance?\n\n        **d. Security**:\n\n        - Are there any potential security vulnerabilities (e.g., SQL injection, unsafe input handling)?\n        - Is sensitive data handled securely?\n\n        **e. Adherence to Best Practices**:\n\n        - Does the code follow language-specific best practices and conventions?\n        - Are there any anti-patterns or bad practices that should be avoided?\n\n        **f. Testing**:\n\n        - Are there sufficient tests for the code (e.g., unit tests, integration tests)?\n        - Do the tests cover edge cases and potential failure points?\n\n        **g. Documentation**:\n\n        - Is the code adequately documented (e.g., docstrings, inline comments)?\n        - Are there clear instructions for how to use or run the code?\n3. **Provide Feedback**:\n    - Summarize your findings in a clear and constructive manner. Highlight both strengths and areas for improvement.\n    - For each issue or suggestion, explain why it matters and, if possible, provide examples or recommendations for improvement.\n    - If the code is excellent and requires no changes, acknowledge this and provide positive feedback.\n4. **Iterate if Needed**:\n    - If the user has follow-up questions or requests further clarification, respond accordingly.\n    - If the user provides updated code after making changes, review it again as needed.\n\nYour goal is to help the user improve their code while maintaining a positive and collaborative tone. Always be specific, actionable, and constructive in your feedback.",
        "codeLens": true,
        "repair": true,
        "rag": true,
        "creationDate": "2025-08-01T12:17:13.836319Z",
        "lastModifiedDate": "2025-08-01T12:17:13.836319Z",
        "tools": [
            {
                "id": "str_replace_editor",
                "name": "File Editor",
                "description": "Allows viewing, creating, and editing files with features like text replacement in existing files, inserting text at specific lines, and reverting edits",
                "author": "ZENCODER_BACKEND",
                "icon": "iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAACXBIWXMAABYlAAAWJQFJUiTwAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAANqSURBVHgB7Zs/b9NAGMaf91poCKQSUju0UydWkPIFykYprcRYMbCVFVH20J1/K526saLSCiQG8gGoVFYWOjUDSNAmRGlp7uXOaoRjxfHZ8bl27d+CfLapnp8v9vnuNVBQUJBnCBHg5alKS7aqUmJebd5QLRXBuAaiCmKCwQ3w2Mbkh/Z7WCS0gOa90jy6XIsz7DCYxbpNCaEEHC1MrBHRChLGpgRhemBzobR6HuE1RLJ2tFBeggWMeoC68ksqfM3dxowmCbwVELsYQ6ONcnN662cTI9K8W/rit89GTxg3Ooqw6t6UoMbJJXo0vdU++N/ahm3OegLilBD4E3CuPmjG3XYy7g2fHHH/HAIFMFHVvS2B7fMK3yNOCYECiNF39cdJWH0umxKXhOCnAPGse7OtbnhICXFICO4Bnt//eXd/L6NKMB4HpJlRJKRPgBpfIAJRJaROAAPfEBGCfIKQpE7A8alYj9oLlIHQL2ipEzD9qX3QORUPmLiOBDAbCieMlqD+eWpy7LB3BxMuxFNgFAoByDmFAOScQgByTiEAOSf7AlzvDXqyFiHJvACGeKmDO9P0TBsISSrfBcJwNkUeeZ6yuAcg5xQCkHNyLyDzTwE3unhDV61cvozNK+86+ybnXJgeoKbGaiz5M4Frf0/4e2ux9NDkvAshwAkPfuZuk8ybJhIyL2BQ+B4mEjItYFj4HlqCU9jlQ2YFmITvwRK+vSCTAsKE16hjD/32ZU5A+PDYl5Je++3PlICI4W9f/+g/JsiMABvhNZkQYCu8JliAZ6n6x/JUIjXCPWyG1xiUyXGrv6WdmADb4TXBRVJEfT2g3O0vm7NFEuE1gQIk95esSMgqLJNUeE2gACFQ72uQWPmzXJ6FJZIMrwkU0BGd3b4bIaHSPe2+sSUhyfAao3J552VC4rm3XdcNO6WzY2hcjaGAUv8d/U5vcmwc4TXGX4wcLU6sqYWHkT+YGPYt0OHixGNivAr+P+IJrzEeCE3uHL9QukKvvHjRpbd+9XxqNudm0PlxhteEGglWdjob+quNKGtwbiRRa1C7knNr2Hlxh9eEnhTtLUXpslQmWSXCDDPPCk9RtR/OGh4Gr+Ex6LcTc+A+7Knw9+MMr4n03aAtft0pzQmhJzYxp6+2GoTV1T3jqyDaq2x36igoKIibf1tovo7P+7AmAAAAAElFTkSuQmCC",
                "tools": [
                    "str_replace_editor"
                ],
                "status": {}
            },
            {
                "id": "web_search",
                "name": "Web Search",
                "description": "Search the web for up-to-date technical information like latest releases, security advisories, migration guides, benchmarks, and community insights",
                "author": "ZENCODER_MCP_BACKEND",
                "icon": "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",
                "tools": [
                    "web_search"
                ],
                "status": {}
            },
            {
                "id": "RequirementsTool",
                "name": "Gather Requirements",
                "description": "Asks clarifying questions to fully understand user needs before starting a task, ensuring precise and efficient solutions",
                "author": "ZENCODER_CLIENT",
                "icon": "iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAACXBIWXMAABYlAAAWJQFJUiTwAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAASaSURBVHgB7Zu9cttGEMd3jxQJ06KsIiysSpVfwA8QpchMRMkctXJjp5HqWOkt97EnrdhEVdRmJFkuUkR+AE96N05lFcqMMwRNUSRxm1vI8AAwyTuAh5FM4leQwAHEYf+43fvgAiAnJ2eWQbAMNb6ptvvtTQK4jwj3wQIS4C0SHSy8ujwCy1gV4OP3lSVvzttDwLuQAQR0VigWtm8fdt6DJQRYJEvjGb62N/D2zlUrA0tYE6C1Wn6QpfEBXIfjtTfBEqlcgP3c7bsrhKh8nHw/FzHjld8e94rzz2uH/7owAefKrUpzcks9qfX4savYgMod5Ou08SGxAO66swIePQXEsc2wWxSNmiVfPW9A1Rk4f407h+OD+mgmFSKRC6hmvqNk/0Vn/BWViZ585EoXFW197BqI+NRddbYgAcYC8IVVBca+Vxq0dz42KkswIexuA+UCxj9A2PIflPHpBvgBTqkbLiMCFwUcCBBvoABn0pPrqgkmUj8tROLZwqvOUbdevncJ+HBYfFCP9ufqcfdUdy0zAerlo3CEl4BnvSJuh32c/bQ0uPW7AMq0J+C675xcPAiXXQVK2ovUrR5Qd26+oQvCWhcY1r3FjWdqh+D2+rjNNwgZEQgfL6/92XnPdbPRnwsRqmXpruiuqY8BQnwbvQk4HhXd+Ub46XATlQhvwRKE8EYZ1OwVbz8cV7ey5iBS6EXvfRhF3QkIFAlkRRTabob9U31ZH7erznXsUY5Hkh9RsI/yHmjQtwAJkebfUQEPbiidQifS6ghQ2wvpBVC+FN6tWZyI2IbjECTE6mToayQXAGacXACYcXIBYMbJBYAZRzsXSEprtaJmj94Ts1Ujc66WvArNT/MMa9hvAeht2TbevywveYF8ApaxLoBapZ2HjJCIbbCMdQEIxIssFkX8JTjCJljGegzIbi0gG/JuEKaN0LqgiStOnQBBDDKNGdZjwHWTNAblMQBmnHwuAJZJOhfIaow/tK6NxUW3192YK8HprT+6/3DZtc8Fshrjx7nYcJbd3sXfSobf+j165+c5wA2ZC2Qxxg/DxiujOcFiOSgjCY/4+9rnAlmN8QOGGf+J1/wx1XOBUcaruPPszsnlPm9PbS8w3vjebrA/lQKYGs9MnQBJjGdunADtNedRa630oVUvv+PtJL9NajyjF4CifznbTFMdhiTaBcJFtbmstvdNRUhjPKMVgJBifXQnUwHUQGIxvGsiQlrjGa0AiBhpARUPss0HJvFTvGicCJMYz2gFkBRNdpIgrbwDMIqFk+6+kv1H+OI+aN+tlyK5ipMaz2gFEAJOo3cCmzYyQMcxSgQC3A1EsGE8o02U9BOV+85hOFcoixcXhtGqO4958hIvR4Rf1RB6AyY03r+WyUn+zImTpGNwzqCfNleAs6zEGCVCnDTGM8bp8q218o6atFh7USHAZD1AJ0Ja4xnjgdDCy8vnnK0JljFZD+CYgAK/U13kf/FjkxjPJBoJVl92m34arOW/vkzWAzjzWxBFRJjUeCb1W2O89EUo+dW4u0S0JFK+L0T+SFO8MF0S+/CDs6x6psfcO5mkw+fk5OSM439mq0xXi3gaPgAAAABJRU5ErkJggg==",
                "tools": [
                    "RequirementsTool"
                ],
                "status": {}
            },
            {
                "id": "ExecuteShellCommand",
                "name": "Execute Shell Command",
                "description": "Run shell commands within the project's root directory",
                "author": "ZENCODER_CLIENT",
                "icon": "iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAACXBIWXMAABYlAAAWJQFJUiTwAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAP1SURBVHgB7ZoxUxNBFMff27tIVOJYmAIqq/gB/AI2zCgw9GLh2MTa8QMAH4AZWlJhIfYMoDM2fAE+gGmkIgXOyBCQRHL7fC+C3h2BvQsb2Az7a5Jdbsnuf9+73Z39A3g8Ho/H47mtIFwBmnlUOuocTEegniDBGCGNS70CHIMBoIEa8omEu6CwDlrXg0KwfX/t1y70SV8CHE3cG49CPYcIT8EBNMB6GKpaP0LkFuDw+d2XhLoKiCVwCYImR0Zt9MvxpzzNcgnQfFHkgUMVXIagVvrcqmV9PLMA3ZlX9P7c7yFsK8It/ltDKVWXuqvk5GUczdwbDzrRaIRBiYgqEcCsAjr3vkGNi1kjIZMAkvM6jD7Gw5445BRyyG3mCznbHE7yxBBJZP5PSelbQb3KMhEKMtApJHNeBs+v4rc3PXhB+lDgvsig/1WyGNGJnsvS3iiAzD4/NJ1oxDP/YLNdB0cocl+Q+xSvkxVqj5dpU1ujAFEYJZY6DdhwYebTSJ84MrfjdXc7R9OmduYUUFCJFwOAVXAUjsyteDkCemJsY3oANCYE4FBzJvTTyEoUL3MaGHekZgFOt7dnRBQ0wVFabZWYHEVkQYAU7TA67FV/OFV8fTB15+fB5Mh3+Q5DglEATB1syhesrZponndFD/nrY/6+chMilL8m+0aA46Y2uSPgQpAexos3JUJe7AlA6l26ahhEsCbAg83WCofBm3S96yLYiwAYThGsCiAMmwjWBRAuEWEJHGMgAnT/MfIqlIIr9sExBiKAhLqEfLqe9xQL4BjWBbho8JISf1PDLawKMGyDF0KwRL+D77YDvXS6jc7DDh9/50c3Wh/gCliLgO5Z4BzmmY+dIfLy2MaqMrCzQOawP9cuOzZWFatnAe7QDl+P7efK+dN2kBP5HRurirV3wOmAVyAn/bazxcA2QsOCFwBuOV4AuOV4AUwPECQvG/b4ihocZW8i2Tc+kdu5HR4WSoVgFHJiFkAMSTGKWlfAUSKMErfBGrFhamNOAYTkfZsejAPMBuIaSdaY7zGNAgSA3+JlPoE9A0fhY/VsssKCAMfh8Xq8LMYD8QuBY0if0td47ULSL9ALowDlNWimjQd8Equ2JkvOvAtakyOVrnUvhngHy7Y8Qu2OWkh7cE7oZNmFSJA+nBAspz1Mv0OVySqX3SYnbizoYZPjfYICWkUM6wEFzYivzwdpk5NPzSsRaj2mST3r5VblVFjMauPJZ5ScKlZ5xG4bJRFqpY0BGCXP6OnLc4B+fYt9maVly3mnoKtp+9xNIW7VdqAWytdhlo4jQoyEnINKNiBU4ci4Hrs84i7PeEP2KMfhfX7b/3DWt+TxeDwej8dd/gBP3cjdQfST7wAAAABJRU5ErkJggg==",
                "tools": [
                    "ExecuteShellCommand"
                ],
                "status": {}
            },
            {
                "id": "fetch_webpage",
                "name": "Fetch Webpage Content",
                "description": "Retrieve webpage content from a specific URL",
                "author": "ZENCODER_MCP_BACKEND",
                "icon": "iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAACXBIWXMAABYlAAAWJQFJUiTwAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAQTSURBVHgB7Zq/ThtBEMZn9s7BAYwo4gIqKvMAeQEapAQQfUgRpXHqKA8APAASLa5IEdIjIJHS8AI8QNyEChdECsIQ7Ni3kxkC5O4w7Nm+PZ/gfg2+5RZ2vv036/0AMjIyMjIyMh4rCH1Ai88K5+3TBQ/UNBJMENKklCvACbCABqrJTyQ8AoVV0Lrq5JyDke3fR9AjPQlwPjs86bl6GRGeQwrQADuuqyq9CNG1AGcvnr4i1GVALECaIKjzyKiMfr343E21rgSov8xz4FCGNENQKXxpVKK+HlmAy55X9OHW/0M4UIT7/LuaUqoqZf3Myfs4XxyedNreqIdOgYhKHsCSArq13qDGtagjIZIAMue1633yD3viIaeQh9xed0Mubs7muGOIZGT+n5LStpx6HaUjFESgnQvOeQmel+J3gw5ekDbkuC0S9E0hi+G19HKU+kYBpPf5pYVAJe75sb1mFVJCntuC3CZ/mexQx7xNm+oaBfBcL7DVacBaHD1/Np9/czr/5Nfp3NAP+Qx9Im3ikXngL3vaPl8w1TNPAQUl/6MDsAUxoIlWeAUd549T/HkdYoBH5r7/2QOaNtYxvQAaAwLwUItr6E/5Po9DDMhO5H/maWDMSM0CXKW313jk1CGlNJoq0DmKKAYBQjRd7wweEEYBMHSwKVpKcuKg+C3YNgKcNNXpegQ8NDIB4JFjVYBek524k6T7sCpAKNnZjBKMvCPvxp0k3YXdKYAUSHBMItwE74MATsAidgUg9T5cdJcInYIXeBteBYtYFWBsr7HJIbwNl3cKtFOZ1P33N+xhfRe4SwQz9oMXEtkGuxchmeCFxPKA6CIkF7yQaCJkFiHZ4IXEM8G7RUg+eGEgqfC1CLzHH/J12smgghdcGBBXAW/CgMkOQ/DIefQCWFsDLnN70OtXp7p+OOSvu1dGdxsfwQLWRoDvKNwvVo/E9qZA6CjcDzaPxEYBCIKXDcd8RQ1R4KOw7PPQJ5InRD0SH88G24ZAxm+wra0Bg9jnCzlntCWGmS4wTwExJPnIa12ClOKhF7gN1og1Ux3zFEAI3rdpOw6wOBDXSLDEfI9pFMAB/O5/5hV5BlIKb7tLwYIYBLhwL3b8z2I8EL8QpAxpU/gar5kL+gU6YRSguA31sPGAV+ZyY66QmrWgMTdUurTu+RDvYDEuj1CzrVbDHpwWtTbSMBKkDS2CjbCH6Y+rIlnlotvkxI0FHWxynCcooC1Et+qQU/f4+tymTU5+at6JUOsJTWqmk1uVp8JaVBtPd0bJ+XyZI063URKhUti1YJS8pqMvLwX06lvsySwtKeeTnC6H7XODQtyqTUetFpMwS/sRIYZcnoNKEhAq8chIxi6PeMQ9XpMc5cId4dX+Z2p9SxkZGRkZGRnp5S+lzdnY4AK96gAAAABJRU5ErkJggg==",
                "tools": [
                    "fetch_webpage"
                ],
                "status": {}
            }
        ],
        "author": "39399e8c-7f6a-40ff-a6eb-da4ede91e4ac",
        "isSharedWithOrganization": false,
        "email": "giorgos_M000@hotmail.com"
    },
    "isUnitTestsAgent": false,
    "isE2EAgent": false,
    "isQnaAgent": false,
    "isRepoInfoAgent": false,
    "autoApply": true
}
}